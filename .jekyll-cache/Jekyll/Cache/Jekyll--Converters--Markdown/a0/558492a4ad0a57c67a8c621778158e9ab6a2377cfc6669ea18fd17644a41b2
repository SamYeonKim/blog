I"VW<h1 id="problem">Problem</h1>

<p>Determine if a 9x9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:</p>

<ol>
  <li>Each row must contain the digits <code class="highlighter-rouge">1-9</code> without repetition.</li>
  <li>Each column must contain the digits <code class="highlighter-rouge">1-9</code> without repetition.</li>
  <li>Each of the 9 <code class="highlighter-rouge">3x3</code> sub-boxes of the grid must contain the digits <code class="highlighter-rouge">1-9</code> without repetition.</li>
</ol>

<h2 id="example-1">Example 1</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="kt">Input</span><span class="p">:</span>
<span class="p">[</span>
  <span class="p">[</span><span class="s">"5"</span><span class="p">,</span><span class="s">"3"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"7"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"6"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"1"</span><span class="p">,</span><span class="s">"9"</span><span class="p">,</span><span class="s">"5"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"."</span><span class="p">,</span><span class="s">"9"</span><span class="p">,</span><span class="s">"8"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"6"</span><span class="p">,</span><span class="s">"."</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"8"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"6"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"3"</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"4"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"8"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"3"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"1"</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"7"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"2"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"6"</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"."</span><span class="p">,</span><span class="s">"6"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"2"</span><span class="p">,</span><span class="s">"8"</span><span class="p">,</span><span class="s">"."</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"4"</span><span class="p">,</span><span class="s">"1"</span><span class="p">,</span><span class="s">"9"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"5"</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"8"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"7"</span><span class="p">,</span><span class="s">"9"</span><span class="p">]</span>
<span class="p">]</span>
<span class="kt">Output</span><span class="p">:</span> <span class="kc">true</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="example-2">Example 2</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="kt">Input</span><span class="p">:</span>
<span class="p">[</span>
  <span class="p">[</span><span class="s">"8"</span><span class="p">,</span><span class="s">"3"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"7"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"6"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"1"</span><span class="p">,</span><span class="s">"9"</span><span class="p">,</span><span class="s">"5"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"."</span><span class="p">,</span><span class="s">"9"</span><span class="p">,</span><span class="s">"8"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"6"</span><span class="p">,</span><span class="s">"."</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"8"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"6"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"3"</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"4"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"8"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"3"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"1"</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"7"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"2"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"6"</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"."</span><span class="p">,</span><span class="s">"6"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"2"</span><span class="p">,</span><span class="s">"8"</span><span class="p">,</span><span class="s">"."</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"4"</span><span class="p">,</span><span class="s">"1"</span><span class="p">,</span><span class="s">"9"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"5"</span><span class="p">],</span>
  <span class="p">[</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"8"</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"."</span><span class="p">,</span><span class="s">"7"</span><span class="p">,</span><span class="s">"9"</span><span class="p">]</span>
<span class="p">]</span>
<span class="kt">Output</span><span class="p">:</span> <span class="kc">false</span>
<span class="kt">Explanation</span><span class="p">:</span> <span class="kt">Same</span> <span class="k">as</span> <span class="kt">Example</span> <span class="mi">1</span><span class="p">,</span> <span class="n">except</span> <span class="n">with</span> <span class="n">the</span> <span class="mi">5</span> <span class="k">in</span> <span class="n">the</span> <span class="n">top</span> <span class="n">left</span> <span class="n">corner</span> <span class="n">being</span> 
    <span class="n">modified</span> <span class="n">to</span> <span class="mi">8</span><span class="o">.</span> <span class="kt">Since</span> <span class="n">there</span> <span class="n">are</span> <span class="n">two</span> <span class="mi">8</span><span class="err">'</span><span class="n">s</span> <span class="k">in</span> <span class="n">the</span> <span class="n">top</span> <span class="n">left</span> <span class="mi">3</span><span class="n">x3</span> <span class="n">sub</span><span class="o">-</span><span class="n">box</span><span class="p">,</span> <span class="n">it</span> <span class="k">is</span> <span class="n">invalid</span><span class="o">.</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="note">Note</h2>

<ul>
  <li>A Sudoku board(partially filled) could be valid but is not necessarily solvable.</li>
  <li>Only the filled cells need to be validated according to the mentioned rules.</li>
  <li>The given board contain only digits <code class="highlighter-rouge">1-9</code> and where empty cells are filled with the character <code class="highlighter-rouge">'.'</code>.</li>
  <li>The given board size is always <code class="highlighter-rouge">9x9</code>.</li>
  <li></li>
</ul>

<h1 id="my-answer">My Answer</h1>

<ul>
  <li><code class="highlighter-rouge">HashMap</code>을 이용하자. <code class="highlighter-rouge">HashMap</code>의 키는 다음과 같이 선정된다.
    <ul>
      <li>row_1~9, column_1~9, block_1~9</li>
      <li>코드에선 키 생성을 편하게 하기 위해서 <code class="highlighter-rouge">숫자 범위</code>로 한다.</li>
      <li><code class="highlighter-rouge">row</code> = [0~height-1] = [0~8]</li>
      <li><code class="highlighter-rouge">column</code> = [height~height+width-1] = [9~17]</li>
      <li><code class="highlighter-rouge">block</code> = [height+width~height+width+width-1] = [18~26]</li>
    </ul>
  </li>
  <li><code class="highlighter-rouge">HashMap</code>의 값은 <code class="highlighter-rouge">Board</code>의 문자가 된다.</li>
  <li><code class="highlighter-rouge">Board</code>를 순회 하면서, 현재 위치의 <code class="highlighter-rouge">row, column, block</code>의 키를 구하고, 각 키에 대응되는 값에 현재 문자가 포함되어 있는지 확인한다.</li>
  <li>만약 포함되어 있다면, 중복 이기때문에 <code class="highlighter-rouge">false</code></li>
  <li>포함되어 있지 않다면, 현재 문자를 <code class="highlighter-rouge">HashMap</code>의 값에 넣는다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isValidSudoku</span><span class="o">(</span><span class="kt">char</span><span class="o">[][]</span> <span class="n">board</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Character</span><span class="o">&gt;&gt;</span> <span class="n">hashmap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>        
        <span class="kt">int</span> <span class="n">width</span> <span class="o">=</span> <span class="n">board</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">height</span> <span class="o">=</span> <span class="n">board</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">height</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">width</span><span class="o">;</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="n">board</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">];</span>
                <span class="k">if</span> <span class="o">(</span> <span class="n">c</span> <span class="o">==</span> <span class="sc">'.'</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>    <span class="c1">//빈 공간은 체크할 필요 없다</span>

                <span class="c1">//#region Row Check</span>
                <span class="kt">int</span> <span class="n">row</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>                                
                <span class="k">if</span> <span class="o">(</span> <span class="o">!</span><span class="n">hashmap</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">row</span><span class="o">)</span> <span class="o">)</span> <span class="o">{</span>
                    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Character</span><span class="o">&gt;</span> <span class="n">l_row</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
                    <span class="n">hashmap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">row</span><span class="o">,</span> <span class="n">l_row</span><span class="o">);</span>
                <span class="o">}</span>
                
                <span class="k">if</span> <span class="o">(</span> <span class="n">hashmap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">row</span><span class="o">).</span><span class="na">contains</span><span class="o">(</span><span class="n">c</span><span class="o">)</span> <span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
                <span class="n">hashmap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">row</span><span class="o">).</span><span class="na">add</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
                <span class="c1">//#endregion</span>

                <span class="c1">//#region Column Check</span>
                <span class="kt">int</span> <span class="n">column</span> <span class="o">=</span> <span class="n">height</span> <span class="o">+</span> <span class="n">j</span><span class="o">;</span>                
                <span class="k">if</span> <span class="o">(</span> <span class="o">!</span><span class="n">hashmap</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">column</span><span class="o">)</span> <span class="o">)</span> <span class="o">{</span>
                    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Character</span><span class="o">&gt;</span> <span class="n">l_column</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
                    <span class="n">hashmap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">column</span><span class="o">,</span> <span class="n">l_column</span><span class="o">);</span>
                <span class="o">}</span>
                
                <span class="k">if</span> <span class="o">(</span> <span class="n">hashmap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">column</span><span class="o">).</span><span class="na">contains</span><span class="o">(</span><span class="n">c</span><span class="o">)</span> <span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
                <span class="n">hashmap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">column</span><span class="o">).</span><span class="na">add</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
                <span class="c1">//#endregion</span>
                
                <span class="c1">//#region Block Check</span>
                <span class="kt">int</span> <span class="n">block</span> <span class="o">=</span> <span class="n">height</span> <span class="o">+</span> <span class="n">width</span> <span class="o">+</span> <span class="o">(</span><span class="n">i</span><span class="o">/</span><span class="mi">3</span><span class="o">*</span><span class="mi">3</span> <span class="o">+</span> <span class="n">j</span><span class="o">/</span><span class="mi">3</span><span class="o">);</span>
                <span class="k">if</span> <span class="o">(</span> <span class="o">!</span><span class="n">hashmap</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">block</span><span class="o">)</span> <span class="o">)</span> <span class="o">{</span>
                    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Character</span><span class="o">&gt;</span> <span class="n">l_block</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
                    <span class="n">hashmap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">block</span><span class="o">,</span> <span class="n">l_block</span><span class="o">);</span>
                <span class="o">}</span>
                
                <span class="k">if</span> <span class="o">(</span> <span class="n">hashmap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">block</span><span class="o">).</span><span class="na">contains</span><span class="o">(</span><span class="n">c</span><span class="o">)</span> <span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
                <span class="n">hashmap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">block</span><span class="o">).</span><span class="na">add</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
                <span class="c1">//#endregion</span>
            <span class="o">}</span>
        <span class="o">}</span>
            
        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

:ET