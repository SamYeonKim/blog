I"9(<h1 id="problem">Problem</h1>

<p>Given an array of integers and an integer k, find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k.</p>

<h2 id="example-1">Example 1</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="kt">Input</span><span class="p">:</span> <span class="n">nums</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">3</span>
<span class="kt">Output</span><span class="p">:</span> <span class="kc">true</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="example-2">Example 2</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="kt">Input</span><span class="p">:</span> <span class="n">nums</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">1</span>
<span class="kt">Output</span><span class="p">:</span> <span class="kc">true</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="example-3">Example 3</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="kt">Input</span><span class="p">:</span> <span class="n">nums</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">2</span>
<span class="kt">Output</span><span class="p">:</span> <span class="kc">false</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="my-answer--use-hashmap-">My Answer ( Use HashMap )</h1>

<ul>
  <li><code class="highlighter-rouge">HashMap</code>을 이용하자.</li>
  <li><code class="highlighter-rouge">nums</code>를 순회하면서, <code class="highlighter-rouge">nums[i]</code>를 <code class="highlighter-rouge">HashMap</code>의 키로, <code class="highlighter-rouge">index</code>를 값으로 할당하자.</li>
  <li>만약 <code class="highlighter-rouge">nums[i]</code>가 <code class="highlighter-rouge">Hashmap</code>의 키로 존재하면서, 현재 <code class="highlighter-rouge">index</code> - 해당 값이 <code class="highlighter-rouge">k</code>보다 같거나 작으면 <code class="highlighter-rouge">true</code></li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">containsNearbyDuplicate</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">,</span> <span class="kt">int</span> <span class="n">k</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">hashmap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">nums</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span> <span class="n">hashmap</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span> <span class="n">i</span> <span class="o">-</span> <span class="n">hashmap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="o">&lt;=</span> <span class="n">k</span> <span class="o">)</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>                
                <span class="o">}</span> 
            <span class="o">}</span>
            
            <span class="n">hashmap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">i</span><span class="o">);</span>    
        <span class="o">}</span>
        
        <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="my-answer">My Answer</h1>

<ul>
  <li><code class="highlighter-rouge">index l,r</code>을 이용해서, <code class="highlighter-rouge">nums[l]</code>과 <code class="highlighter-rouge">nums[r]</code>을 비교해서 알아내자.</li>
  <li>만약 <code class="highlighter-rouge">r-l</code>이 <code class="highlighter-rouge">k</code>랑 같거나, <code class="highlighter-rouge">r</code>이 <code class="highlighter-rouge">nums.length - 1</code>과 같다면, <code class="highlighter-rouge">l</code>을 증가 시키자.</li>
  <li>그렇지 않다면 <code class="highlighter-rouge">r</code>을 증가 시키자.</li>
  <li>이런식으로 비교 하다가 <code class="highlighter-rouge">nums[l]</code>과 <code class="highlighter-rouge">nums[r]</code>이 같아지면 <code class="highlighter-rouge">true</code>이다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">containsNearbyDuplicate</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">,</span> <span class="kt">int</span> <span class="n">k</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span> <span class="n">k</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span> 
        
        <span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">r</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        
        <span class="k">while</span><span class="o">(</span> <span class="n">l</span> <span class="o">&lt;</span> <span class="n">nums</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span><span class="mi">1</span> <span class="o">)</span> <span class="o">{</span>            
            <span class="k">if</span> <span class="o">(</span> <span class="n">l</span> <span class="o">!=</span> <span class="n">r</span> <span class="o">&amp;&amp;</span> <span class="n">nums</span><span class="o">[</span><span class="n">l</span><span class="o">]</span> <span class="o">==</span> <span class="n">nums</span><span class="o">[</span><span class="n">r</span><span class="o">]</span> <span class="o">)</span> <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
            
            <span class="k">if</span> <span class="o">(</span> <span class="n">r</span><span class="o">-</span><span class="n">l</span> <span class="o">==</span> <span class="n">k</span> <span class="o">||</span> <span class="n">r</span> <span class="o">==</span> <span class="n">nums</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span><span class="mi">1</span> <span class="o">)</span> <span class="o">{</span>
                <span class="n">l</span><span class="o">++;</span>                
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="n">r</span><span class="o">++;</span>
            <span class="o">}</span>            
        <span class="o">}</span>
        
        <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

:ET