I";!<h1 id="problem">Problem</h1>

<p>We are playing the Guess Game. The game is as follows:</p>

<p>I pick a number from 1 to n. You have to guess which number I picked.</p>

<p>Every time you guess wrong, I’ll tell you whether the number is higher or lower.</p>

<p>You call a pre-defined API guess(int num) which returns 3 possible results (-1, 1, or 0):</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="o">-</span><span class="mi">1</span> <span class="p">:</span> <span class="kt">My</span> <span class="n">number</span> <span class="k">is</span> <span class="n">lower</span>
 <span class="mi">1</span> <span class="p">:</span> <span class="kt">My</span> <span class="n">number</span> <span class="k">is</span> <span class="n">higher</span>
 <span class="mi">0</span> <span class="p">:</span> <span class="kt">Congrats</span><span class="o">!</span> <span class="kt">You</span> <span class="n">got</span> <span class="n">it</span><span class="o">!</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="example">Example</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="kt">Input</span><span class="p">:</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">10</span><span class="p">,</span> <span class="n">pick</span> <span class="o">=</span> <span class="mi">6</span>
<span class="kt">Output</span><span class="p">:</span> <span class="mi">6</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="my-answer">My Answer</h1>

<ul>
  <li>1~n까지 분할해서 찾자.</li>
  <li><code class="highlighter-rouge">l</code>은 최소값, <code class="highlighter-rouge">r</code>은 최대값이다. <code class="highlighter-rouge">while</code>문에서는 <code class="highlighter-rouge">l+r의 중간값 ( mid )</code>를 찾고 <code class="highlighter-rouge">mid</code>가 찾는 값인지 <code class="highlighter-rouge">guess</code>함수로 확인한다.</li>
  <li>만약 <code class="highlighter-rouge">guess</code>함수의 리턴값이 <code class="highlighter-rouge">0</code>이면 답을 찾았으니 끝내고, <code class="highlighter-rouge">-1</code>이면 <code class="highlighter-rouge">mid</code>보다 작은 값을 찾아야 하니 <code class="highlighter-rouge">r</code>에 <code class="highlighter-rouge">mid</code>를 할당하고 다음 반복 수행, 
<code class="highlighter-rouge">1</code>이면 <code class="highlighter-rouge">mid</code>보다 큰 값이니까 <code class="highlighter-rouge">l</code>에 <code class="highlighter-rouge">mid+</code>한 값을 할당하고 반복 수행 하면된다.</li>
  <li>예를 들어 다음과 같은 흐름으로 진행된다.
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>  <span class="nl">Input:</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">10</span><span class="o">,</span> <span class="n">pick</span> <span class="o">=</span> <span class="mi">7</span>
  <span class="mi">1</span><span class="o">:</span>
      <span class="n">l</span><span class="o">=</span><span class="mi">1</span><span class="o">,</span> <span class="n">r</span><span class="o">=</span><span class="mi">10</span><span class="o">,</span> <span class="n">mid</span><span class="o">=</span><span class="mi">5</span><span class="o">,</span> <span class="n">guess</span><span class="o">(</span><span class="mi">5</span><span class="o">)=</span><span class="mi">1</span>
  <span class="mi">2</span><span class="o">:</span>
      <span class="n">l</span><span class="o">=</span><span class="mi">6</span><span class="o">,</span> <span class="n">r</span><span class="o">=</span><span class="mi">10</span><span class="o">,</span> <span class="n">mid</span><span class="o">=</span><span class="mi">8</span><span class="o">,</span> <span class="n">guess</span><span class="o">(</span><span class="mi">8</span><span class="o">)=-</span><span class="mi">1</span>
  <span class="mi">3</span><span class="o">:</span>
      <span class="n">l</span><span class="o">=</span><span class="mi">6</span><span class="o">,</span> <span class="n">r</span><span class="o">=</span><span class="mi">8</span><span class="o">,</span> <span class="n">mid</span><span class="o">=</span><span class="mi">7</span><span class="o">,</span> <span class="n">guess</span><span class="o">(</span><span class="mi">7</span><span class="o">)=</span><span class="mi">0</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="rouge-code"><pre><span class="cm">/* The guess API is defined in the parent class GuessGame.
   @param num, your guess
   @return -1 if my number is lower, 1 if my number is higher, otherwise return 0
      int guess(int num); */</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Solution</span> <span class="kd">extends</span> <span class="nc">GuessGame</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">guessNumber</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">l</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="n">n</span><span class="o">;</span>
        
        <span class="kt">int</span> <span class="n">res</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        
        <span class="k">while</span><span class="o">(</span> <span class="n">l</span> <span class="o">&lt;=</span> <span class="n">r</span><span class="o">)</span> <span class="o">{</span>            
            <span class="kt">int</span> <span class="n">mid</span> <span class="o">=</span> <span class="n">l</span> <span class="o">+</span> <span class="o">((</span><span class="n">r</span> <span class="o">-</span> <span class="n">l</span><span class="o">)&gt;&gt;</span><span class="mi">1</span><span class="o">);</span> <span class="c1">// `(l+r)/2` 은 할 수 없다. l+r이 int의 범위를 넘을 수 있기 때문에.</span>
            <span class="kt">int</span> <span class="n">g</span> <span class="o">=</span> <span class="n">guess</span><span class="o">(</span> <span class="n">mid</span> <span class="o">);</span>
            
            <span class="k">if</span> <span class="o">(</span> <span class="n">g</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">)</span> <span class="o">{</span>
                <span class="n">res</span> <span class="o">=</span> <span class="n">mid</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span> <span class="n">g</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">l</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="n">r</span> <span class="o">=</span> <span class="n">mid</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        
        <span class="k">return</span> <span class="n">res</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

:ET