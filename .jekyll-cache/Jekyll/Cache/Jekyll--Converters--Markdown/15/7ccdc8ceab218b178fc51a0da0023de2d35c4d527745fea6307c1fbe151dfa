I">"<h1 id="problem">Problem</h1>

<p>Given a string, find the first non-repeating character in it and return it’s index. If it doesn’t exist, return -1.</p>

<h2 id="example-1">Example 1</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="kt">Input</span><span class="p">:</span> <span class="s">"leetcode"</span>
<span class="kt">Output</span><span class="p">:</span> <span class="mi">0</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="example-2">Example 2</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="kt">Input</span><span class="p">:</span> <span class="s">"loveleetcode"</span>
<span class="kt">Output</span><span class="p">:</span> <span class="mi">2</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="note">Note</h2>

<ul>
  <li>You mau assume the string contain only lowercase letters.</li>
</ul>

<h1 id="my-answer">My Answer</h1>

<ul>
  <li><code class="highlighter-rouge">HashMap</code>을 이용하자. <code class="highlighter-rouge">s</code>를 순회하면서, 문자의 발생횟수를 <code class="highlighter-rouge">HashMap</code>의 값으로 넣자.</li>
  <li>이후 <code class="highlighter-rouge">s</code>를 순회하면서, <code class="highlighter-rouge">HashMap</code>의 값이 1인것이 나오면 해당 <code class="highlighter-rouge">index</code>가 정답이다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">firstUniqChar</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">Character</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">count</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">Character</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;();</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span>
        
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="n">count</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">c</span><span class="o">,</span> <span class="n">count</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">c</span><span class="o">,</span> <span class="mi">0</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span> <span class="n">count</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">))</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span>
                <span class="k">return</span> <span class="n">i</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="fastest-answer">Fastest Answer</h1>

<ul>
  <li>소문자 문자 [a~z]만 포함되기 때문에, <code class="highlighter-rouge">s</code>에서 각 문자가 위치하고 있는 <code class="highlighter-rouge">가장 작은 index</code>와 <code class="highlighter-rouge">가장 큰 index</code>를 찾자.</li>
  <li>만약 <code class="highlighter-rouge">가장 작은 index</code>가 -1이면, 해당 문자는 <code class="highlighter-rouge">s</code>에 없다는 뜻.</li>
  <li>만약 <code class="highlighter-rouge">가장 작은 index</code>와 <code class="highlighter-rouge">가장 큰 index</code>가 같다면, 해당 문자는 <code class="highlighter-rouge">s</code>에서 하나만 있다는 뜻.</li>
  <li>위의 조건을 만족하는 것들중 가장 작은 <code class="highlighter-rouge">index</code>값이 정답.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">firstUniqChar</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        
        <span class="kt">int</span> <span class="n">min_index</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">char</span> <span class="n">c</span><span class="o">=</span><span class="sc">'a'</span><span class="o">;</span> <span class="n">c</span><span class="o">&lt;=</span> <span class="sc">'z'</span><span class="o">;</span> <span class="n">c</span><span class="o">++)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">first</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
            <span class="kt">int</span> <span class="n">last</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
            
            <span class="k">if</span> <span class="o">(</span> <span class="n">first</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="n">first</span> <span class="o">!=</span> <span class="n">last</span> <span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
                
            <span class="n">min_index</span> <span class="o">=</span> <span class="n">min_index</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="n">min_index</span> <span class="o">&gt;</span> <span class="n">first</span> <span class="o">?</span> <span class="n">first</span> <span class="o">:</span> <span class="n">min_index</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="k">return</span> <span class="n">min_index</span><span class="o">;</span>        
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

:ET