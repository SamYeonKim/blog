I"<h1 id="problem">Problem</h1>

<p>Write an algorithm to determine if a number is “happy”.</p>

<p>A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.</p>

<h2 id="example">Example</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="kt">Input</span><span class="p">:</span> <span class="mi">19</span>
<span class="kt">Output</span><span class="p">:</span> <span class="kc">true</span>
<span class="kt">Explanation</span><span class="p">:</span> 
<span class="mi">1</span><span class="o">^</span><span class="mi">2</span> <span class="o">+</span> <span class="mi">9</span><span class="o">^</span><span class="mi">2</span> <span class="o">=</span> <span class="mi">82</span>
<span class="mi">8</span><span class="o">^</span><span class="mi">2</span> <span class="o">+</span> <span class="mi">2</span><span class="o">^</span><span class="mi">2</span> <span class="o">=</span> <span class="mi">68</span>
<span class="mi">6</span><span class="o">^</span><span class="mi">2</span> <span class="o">+</span> <span class="mi">8</span><span class="o">^</span><span class="mi">2</span> <span class="o">=</span> <span class="mi">100</span>
<span class="mi">1</span><span class="o">^</span><span class="mi">2</span> <span class="o">+</span> <span class="mi">0</span><span class="o">^</span><span class="mi">2</span> <span class="o">+</span> <span class="mi">0</span><span class="o">^</span><span class="mi">2</span> <span class="o">=</span> <span class="mi">1</span>    
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="my-answer">My Answer</h1>

<ul>
  <li><code class="highlighter-rouge">HashSet</code>을 이용하자.</li>
  <li>자릿수마다 제곱수를 구한 후 전부 합하면 다음 반복수행때 사용할 <code class="highlighter-rouge">n</code>이 된다.</li>
  <li><code class="highlighter-rouge">n</code>은 <code class="highlighter-rouge">HashSet</code>에 넣어 주자.</li>
  <li>만약 <code class="highlighter-rouge">n</code>이 <code class="highlighter-rouge">HashSet</code>에 이미 있다는건, 반복 싸이클이 돈다는걸 의미 한다.</li>
  <li>만약 <code class="highlighter-rouge">n</code>이 <code class="highlighter-rouge">1</code>이면 <code class="highlighter-rouge">HappyNumber</code>이다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isHappy</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Set</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">hashSet</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;&gt;();</span>
        
        <span class="k">while</span><span class="o">(!</span><span class="n">hashSet</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">n</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">hashSet</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
            <span class="n">n</span> <span class="o">=</span> <span class="n">getSquareSum</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
            
            <span class="k">if</span> <span class="o">(</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">)</span> <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kt">int</span> <span class="nf">getSquareSum</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">res</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span> <span class="n">n</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">digit</span> <span class="o">=</span> <span class="n">n</span> <span class="o">%</span> <span class="mi">10</span><span class="o">;</span>
            <span class="n">res</span> <span class="o">+=</span> <span class="n">digit</span> <span class="o">*</span> <span class="n">digit</span><span class="o">;</span>
            <span class="n">n</span> <span class="o">/=</span> <span class="mi">10</span><span class="o">;</span>
        <span class="o">}</span>        
        <span class="k">return</span> <span class="n">res</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

:ET