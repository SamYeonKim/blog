I"W<h1 id="problem">Problem</h1>

<p>Write a function that reverses a string. The input string is given as an array of characters char[].</p>

<p>Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.</p>

<p>You may assume all the characters consist of printable ascii characters.</p>

<h2 id="example-1">Example 1</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="kt">Input</span><span class="p">:</span> <span class="p">[</span><span class="s">"h"</span><span class="p">,</span><span class="s">"e"</span><span class="p">,</span><span class="s">"l"</span><span class="p">,</span><span class="s">"l"</span><span class="p">,</span><span class="s">"o"</span><span class="p">]</span>
<span class="kt">Output</span><span class="p">:</span> <span class="p">[</span><span class="s">"o"</span><span class="p">,</span><span class="s">"l"</span><span class="p">,</span><span class="s">"l"</span><span class="p">,</span><span class="s">"e"</span><span class="p">,</span><span class="s">"h"</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="example-2">Example 2</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="kt">Input</span><span class="p">:</span> <span class="p">[</span><span class="s">"H"</span><span class="p">,</span><span class="s">"a"</span><span class="p">,</span><span class="s">"n"</span><span class="p">,</span><span class="s">"n"</span><span class="p">,</span><span class="s">"a"</span><span class="p">,</span><span class="s">"h"</span><span class="p">]</span>
<span class="kt">Output</span><span class="p">:</span> <span class="p">[</span><span class="s">"h"</span><span class="p">,</span><span class="s">"a"</span><span class="p">,</span><span class="s">"n"</span><span class="p">,</span><span class="s">"n"</span><span class="p">,</span><span class="s">"a"</span><span class="p">,</span><span class="s">"H"</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="my-answer">My Answer</h1>

<ul>
  <li>2개의 index 포인터를 이용해서 스왑한다.</li>
  <li><code class="highlighter-rouge">l_idx</code> 가 <code class="highlighter-rouge">r_idx</code>보다 작을때만 순회한다. 만약 <code class="highlighter-rouge">l_idx</code>가 <code class="highlighter-rouge">r_idx</code>와 같거나 커지는 경우는 더이상 스왑할 것이 없다는 의미.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">reverseString</span><span class="o">(</span><span class="kt">char</span><span class="o">[]</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">l_idx</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">r_idx</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span>
        
        <span class="k">while</span><span class="o">(</span> <span class="n">l_idx</span> <span class="o">&lt;</span> <span class="n">r_idx</span> <span class="o">)</span> <span class="o">{</span>
            <span class="kt">char</span> <span class="n">src</span> <span class="o">=</span> <span class="n">s</span><span class="o">[</span><span class="n">l_idx</span><span class="o">];</span>
            <span class="kt">char</span> <span class="n">dst</span> <span class="o">=</span> <span class="n">s</span><span class="o">[</span><span class="n">r_idx</span><span class="o">];</span>
            <span class="n">s</span><span class="o">[</span><span class="n">l_idx</span><span class="o">++]</span> <span class="o">=</span> <span class="n">dst</span><span class="o">;</span>
            <span class="n">s</span><span class="o">[</span><span class="n">r_idx</span><span class="o">--]</span> <span class="o">=</span> <span class="n">src</span><span class="o">;</span>   
        <span class="o">}</span>
    <span class="o">}</span>    
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

:ET